{"version":3,"sources":["Components/section/SectionListStyled.js","Components/section/Section.js","Components/feedback/FeedbackListStyled.js","Components/feedback/FeedbackOptions.js","Components/statistics/StatisticListStyled.js","Components/statistics/Statistics.js","Components/notification/NotificationListStyled.js","Components/notification/Notification.js","App.js","index.js"],"names":["SectionListContainer","styled","div","Section","children","title","className","FeedbackListContainer","li","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","index","type","name","onClick","toUpperCase","StatisticListContainer","ul","Statistics","countTotalFeedback","countPositiveFeedbackPercentage","NotificationListContainer","h3","Notification","message","App","state","good","neutral","bad","evt","target","setState","prevState","total","Math","round","emptyData","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEaA,EAAuBC,IAAOC,IAAV,0B,OCelBC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,eAACL,EAAD,CAAsBM,UAAU,iBAAhC,UACE,oBAAIA,UAAU,QAAd,SAAuBD,IACtBD,MCNMG,EAAwBN,IAAOO,GAAV,gQCyBnBC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACJ,EAAD,UACGK,OAAOC,KAAKH,GAASI,KAAI,SAACC,EAAKC,GAAN,OACxB,wBAEEC,KAAK,SACLX,UAAU,MACVY,KAAMH,EACNI,QAASR,EALX,SAOGI,EAAIK,eANAJ,SCPFK,EAAyBpB,IAAOqB,GAAV,8PCoCpBC,EAlCI,SAAC,GAIb,IAHLC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,gCACAf,EACI,EADJA,QAEA,OACE,eAACW,EAAD,CAAwBf,UAAU,kBAAlC,UACGM,OAAOC,KAAKH,GAASI,KAAI,SAACC,EAAKC,GAAN,OACxB,qBAAIV,UAAU,kBAAd,UACE,mBAAGA,UAAU,mBAAb,SAAiCS,EAAIK,gBACrC,sBAAMd,UAAU,yBAAhB,SAA0CI,EAAQK,OAFfC,MAMvC,qBAAIV,UAAU,kBAAd,UACE,mBAAGA,UAAU,mBAAb,oBACA,sBAAMA,UAAU,yBAAhB,SAA0CkB,SAE5C,qBAAIlB,UAAU,kBAAd,UACE,mBAAGA,UAAU,sBAAb,gCACA,uBAAMA,UAAU,4BAAhB,UACGmB,IADH,cCtBKC,EAA4BzB,IAAO0B,GAAV,sPCcvBC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,cAACH,EAAD,CAA2BpB,UAAU,eAArC,SACGuB,KCgDQC,E,4MAhDbC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCvB,gBAAkB,SAACwB,GACjB,IAAQjB,EAASiB,EAAIC,OAAblB,KACR,EAAKmB,UAAS,SAACC,GAAD,sBAAmBpB,EAAOoB,EAAUpB,GAAQ,O,EAG5DM,mBAAqB,WACnB,MAA+B,EAAKO,MACpC,OADA,EAAQC,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBT,gCAAkC,WAChC,IAAQO,EAAS,EAAKD,MAAdC,KACFO,EAAQ,EAAKf,qBACnB,OAAOgB,KAAKC,MAAOT,EAAOO,EAAS,M,EAGrCG,UAAY,WACV,OAAQ,EAAKlB,sB,4CAGf,WACE,OACE,mCACE,eAAC,EAAD,CAASnB,MAAO,wBAAhB,UACE,cAAC,EAAD,CACEK,QAASiC,KAAKZ,MACdpB,gBAAiBgC,KAAKhC,kBAExB,oBAAIL,UAAU,mBAAd,wBACCqC,KAAKD,YACJ,cAAC,EAAD,CAAcb,QAAQ,sBAEtB,cAAC,EAAD,CACEnB,QAASiC,KAAKZ,MACdP,mBAAoBmB,KAAKnB,mBACzBC,gCACEkB,KAAKlB,2C,GAvCHmB,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e52c5f0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const SectionListContainer = styled.div``;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SectionListContainer } from \"./SectionListStyled\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionListContainer className=\"main-container\">\r\n      <h1 className=\"title\">{title}</h1>\r\n      {children}\r\n    </SectionListContainer>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FeedbackListContainer = styled.li`\r\n  list-style: none;\r\n  display: flex;\r\n\r\n  .btn {\r\n    font-weight: bold;\r\n    width: 100px;\r\n    margin: 5px;\r\n    padding: 5px;\r\n    color: yellow;\r\n    background-color: black;\r\n\r\n    :hover {\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FeedbackListContainer } from \"./FeedbackListStyled\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <FeedbackListContainer>\r\n      {Object.keys(options).map((key, index) => (\r\n        <button\r\n          key={index}\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          name={key}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {key.toUpperCase()}\r\n        </button>\r\n      ))}\r\n    </FeedbackListContainer>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatisticListContainer = styled.ul`\r\n  .statistics-list {\r\n    list-style: none;\r\n    padding-left: 0px;\r\n  }\r\n  .statistics-item {\r\n    display: flex;\r\n    text-align: center;\r\n    align-items: center;\r\n  }\r\n  .statistics-names {\r\n    padding-right: 10px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StatisticListContainer } from \"./StatisticListStyled\";\r\n\r\nconst Statistics = ({\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n  options,\r\n}) => {\r\n  return (\r\n    <StatisticListContainer className=\"statistics-list\">\r\n      {Object.keys(options).map((key, index) => (\r\n        <li className=\"statistics-item\" key={index}>\r\n          <p className=\"statistics-names\">{key.toUpperCase()}</p>\r\n          <span className=\"statistics-names-value\">{options[key]}</span>\r\n        </li>\r\n      ))}\r\n\r\n      <li className=\"statistics-item\">\r\n        <p className=\"statistics-total\">Total:</p>\r\n        <span className=\"statistics-total-value\">{countTotalFeedback()}</span>\r\n      </li>\r\n      <li className=\"statistics-item\">\r\n        <p className=\"statistics-positive\">Positive feedback:</p>\r\n        <span className=\"statistics-positive-value\">\r\n          {countPositiveFeedbackPercentage()}%\r\n        </span>\r\n      </li>\r\n    </StatisticListContainer>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  countTotalFeedback: PropTypes.func.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NotificationListContainer = styled.h3`\r\n  .notification {\r\n    font-size: 30px;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    color: #692b07;\r\n    width: min-content;\r\n    padding: 10px;\r\n    border: solid 1px #692b07;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NotificationListContainer } from \"./NotificationListStyled\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <NotificationListContainer className=\"notification\">\r\n      {message}\r\n    </NotificationListContainer>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./Components/section/Section\";\r\nimport FeedbackOptions from \"./Components/feedback/FeedbackOptions\";\r\nimport Statistics from \"./Components/statistics/Statistics\";\r\nimport Notification from \"./Components/notification/Notification\";\r\n\r\nclass App extends Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n  onLeaveFeedback = (evt) => {\r\n    const { name } = evt.target;\r\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return Math.round((good / total) * 100);\r\n  };\r\n\r\n  emptyData = () => {\r\n    return !this.countTotalFeedback();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n          <h2 className=\"statistics-title\">Statistics</h2>\r\n          {this.emptyData() ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              options={this.state}\r\n              countTotalFeedback={this.countTotalFeedback}\r\n              countPositiveFeedbackPercentage={\r\n                this.countPositiveFeedbackPercentage\r\n              }\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}